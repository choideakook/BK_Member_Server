plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.baeker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	// Base
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
	implementation 'org.springframework.boot:spring-boot-starter-validation' //Validation
	implementation 'org.springframework.boot:spring-boot-starter-web' // web
	annotationProcessor 'org.projectlombok:lombok' // Lombok
	compileOnly 'org.projectlombok:lombok' // Lombok

	// Spring Config
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // Actuator
	implementation 'org.springframework.cloud:spring-cloud-starter-config' // Config

	// api 호출
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// spring doc open api
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// jasypt 암호화
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// Database
	runtimeOnly 'com.h2database:h2' // Test DB
	runtimeOnly 'com.mysql:mysql-connector-j' // Dev DB

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "jasypt.encryptor.password", project.getProperty("jasypt.encryptor.password")

}


jar{
	enabled = false
}

clean {
	delete file('src/main/generated')
}
